name: Auth Service CI/CD

on:
  workflow_call:


jobs:
  test-build-push-deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: tryit-auth-service
      TEST_DB_URL: "postgresql+asyncpg://postgres:password@localhost:5432/test_db"
      PY_VERSION: '3.12'

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PY_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'backend-python/auth_service/requirements.txt'

    - name: Install dependencies
      working-directory: backend-python/auth_service
      run: |
        pip install -r requirements.txt
        pip install ../shared

    - name: Run tests
      working-directory: backend-python/auth_service
      env:
        DB_URL: ${{ env.TEST_DB_URL }}
        TEST_DB_URL: ${{ env.TEST_DB_URL }}
        CORS_ORIGINS: "http://localhost:3000"
        JWT_SECRET_KEY: "dummy_secret"
        ENVIRONMENT: "test"
      run: pytest

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set Docker image tags
      run: |
        echo "DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE_NAME:${{ github.sha }}" >> $GITHUB_ENV
        echo "DOCKER_IMAGE_LATEST=${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE_NAME:latest" >> $GITHUB_ENV

    - name: Build Docker image
      working-directory: backend-python
      run: |
        docker build -t $DOCKER_IMAGE -t $DOCKER_IMAGE_LATEST -f auth_service/Dockerfile .

    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push $DOCKER_IMAGE
        docker push $DOCKER_IMAGE_LATEST

    - name: Save image tag
      if: github.ref == 'refs/heads/main'
      run: echo "$DOCKER_IMAGE" > image-tag.txt

    - name: Upload image tag
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: auth-image-tag
        path: image-tag.txt
