name: Real-Time Service CI/CD

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  test-build-push-deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: tryit-real-time-service
      GO_VERSION: '1.24'
      TESTCONTAINERS_RYUK_DISABLED: 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        cache-dependency-path: backend-go/go.sum

    # - name: Run unit tests
    #   working-directory: backend-go/real_time
    #   env:
    #     RABBITMQ_USER: admin
    #     RABBITMQ_PASSWORD: password
    #     RABBITMQ_HOST: localhost
    #     RABBITMQ_PORT: "5672"
    #     REDIS_HOST: redis
    #     REDIS_PORT: "6379"
    #     REALTIME_SERVICE_HOST: "0.0.0.0"
    #     REALTIME_SERVICE_PORT: "8080"
    #     JWT_SECRET_KEY: "dummy_secret"
    #     ENV: "test"
    #   run: go test -v ./tests/...

    - name: Run integration tests
      working-directory: backend-go/real_time
      env:
        RABBITMQ_USER: admin
        RABBITMQ_PASSWORD: password
        RABBITMQ_HOST: localhost
        RABBITMQ_PORT: "5672"
        REDIS_HOST: redis
        REDIS_PORT: "6379"
        REALTIME_SERVICE_HOST: "0.0.0.0"
        REALTIME_SERVICE_PORT: "8080"
        JWT_SECRET_KEY: "dummy_secret"
        ENV: "test"
      run: |
        go test -v -tags=integration ./tests/...

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set Docker image tags
      run: |
        echo "DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE_NAME:${{ github.sha }}" >> $GITHUB_ENV
        echo "DOCKER_IMAGE_LATEST=${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE_NAME:latest" >> $GITHUB_ENV

    - name: Build Docker image
      working-directory: backend-go
      run: |
        docker build -t $DOCKER_IMAGE -t $DOCKER_IMAGE_LATEST -f real_time/Dockerfile .

    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push $DOCKER_IMAGE
        docker push $DOCKER_IMAGE_LATEST

    - name: Save image tag
      if: github.ref == 'refs/heads/main'
      working-directory: backend-go/real_time
      run: echo "$DOCKER_IMAGE" > image-tag.txt

    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: real-time-service-image-tag
        path: backend-go/real_time/image-tag.txt
