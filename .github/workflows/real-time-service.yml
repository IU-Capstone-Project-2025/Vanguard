name: Real-Time Service CI/CD

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      push-to-docker:
        description: "Also push Docker image when manually requested"
        required: false
        type: boolean
    outputs:
      image:
        value: ${{ jobs.test-build-push.outputs.image }}

jobs:
  test-build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_SHA: ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:${{ github.sha }}
      IMAGE_LATEST: ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:latest
      GO_VERSION: '1.24'
      TESTCONTAINERS_RYUK_DISABLED: 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        cache-dependency-path: backend-go/go.sum

    - name: Run integration tests
      working-directory: backend-go/real_time
      env:
        RABBITMQ_USER: admin
        RABBITMQ_PASSWORD: password
        RABBITMQ_HOST: localhost
        RABBITMQ_PORT: "5672"
        REDIS_HOST: localhost
        REDIS_PORT: "6379"
        REALTIME_SERVICE_HOST: "0.0.0.0"
        REALTIME_SERVICE_PORT: "8080"
        JWT_SECRET_KEY: "dummy_secret"
        ENV: "test"
      run: |
        go test -v -tags=integration ./tests/...

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      working-directory: backend-go
      run: |
        docker build -t $IMAGE_SHA -t $IMAGE_LATEST -f real_time/Dockerfile .

    - name: Push Docker image
      if: github.ref == 'refs/heads/main' || inputs.push-to-docker == true
      run: |
        docker push $IMAGE_SHA
        docker push $IMAGE_LATEST

    - name: Set output image
      id: out
      run: echo "image=$IMAGE_SHA" >> $GITHUB_OUTPUT

    outputs:
      image: ${{ steps.out.outputs.image }}
