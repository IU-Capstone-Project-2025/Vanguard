name: Frontend CI/CD

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
    outputs:
      image:
        value: ${{ jobs.test-build-push.outputs.image }}

jobs:
  test-build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_SHA: ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:${{ github.sha }}
      IMAGE_LATEST: ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'frontend/app/package-lock.json'

    - name: Install dependencies
      working-directory: frontend/app
      run: npm ci

    - name: Start frontend dev server
      working-directory: frontend/app
      run: |
        nohup npm run start > dev.log 2>&1 &

    - name: Wait for frontend to be ready
      run: npx wait-on http://localhost:3000 --timeout 60000

    - name: Run frontend tests
      working-directory: frontend/app
      run: npm run test

    - name: Dump server logs (if tests fail)
      if: failure()
      run: cat frontend/app/dev.log

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      working-directory: frontend
      run: |
        docker build -t $IMAGE_SHA -t $IMAGE_LATEST .

    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push $IMAGE_SHA
        docker push $IMAGE_LATEST

    - name: Set output image
      id: out
      run: echo "image=$IMAGE_SHA" >> $GITHUB_OUTPUT

    outputs:
      image: ${{ steps.out.outputs.image }}
