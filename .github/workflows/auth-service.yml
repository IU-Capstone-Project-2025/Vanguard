name: Auth Service CI/CD

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      push-to-docker:
        description: "Also push Docker image when manually requested"
        required: false
        type: boolean
    outputs:
      image:
        value: ${{ jobs.test-build-push.outputs.image }}

jobs:
  test-build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_LATEST: ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:latest
      TEST_DB_URL: "postgresql+asyncpg://postgres:password@localhost:5432/test_db"
      PY_VERSION: '3.12'

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set short SHA and image name
      id: set-short-sha
      run: |
        SHORT_SHA="${GITHUB_SHA::7}"
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "IMAGE_SHA=${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:$SHORT_SHA" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PY_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'backend-python/auth_service/requirements.txt'

    - name: Install dependencies
      working-directory: backend-python/auth_service
      run: |
        pip install -r requirements.txt
        pip install ../shared

    - name: Run tests
      working-directory: backend-python/auth_service
      env:
        DB_URL: ${{ env.TEST_DB_URL }}
        TEST_DB_URL: ${{ env.TEST_DB_URL }}
        CORS_ORIGINS: "http://localhost:3000"
        JWT_SECRET_KEY: "dummy_secret"
        ENVIRONMENT: "test"
      run: pytest

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      working-directory: backend-python
      run: |
        docker build -t $IMAGE_SHA -t $IMAGE_LATEST -f auth_service/Dockerfile .

    - name: Push Docker image
      if: github.ref == 'refs/heads/main' || inputs.push-to-docker == true
      run: |
        docker push $IMAGE_SHA
        docker push $IMAGE_LATEST

    - name: Set output image
      id: out
      run: echo "image=$IMAGE_SHA" >> $GITHUB_OUTPUT

    outputs:
      image: ${{ steps.out.outputs.image }}
