apiVersion: apps/v1
kind: Deployment
metadata:
  name: "real-time-{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "real-time"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/part-of: "tryit"
    app.kubernetes.io/env: "{{ .Values.environment | default "prod" }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  revisionHistoryLimit: 12
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "real-time"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 25%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "real-time"
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - name: "real-time"
        image: "{{ .Values.image.name }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        env:
          - name: RABBITMQ_USER
            value: "{{ .Values.env.RABBITMQ_USER }}"
          - name: RABBITMQ_PASSWORD
            value: "{{ .Values.env.RABBITMQ_PASSWORD }}"
          - name: RABBITMQ_HOST
            value: "{{ .Values.env.RABBITMQ_HOST }}"
          - name: RABBITMQ_PORT
            value: "{{ .Values.env.RABBITMQ_PORT }}"
          - name: REDIS_HOST
            value: "{{ .Values.env.REDIS_HOST }}"
          - name: REDIS_PORT
            value: "{{ .Values.env.REDIS_PORT }}"
          - name: REALTIME_SERVICE_HOST
            value: "{{ .Values.env.REALTIME_SERVICE_HOST }}"
          - name: REALTIME_SERVICE_PORT
            value: "{{ .Values.env.REALTIME_SERVICE_PORT }}"
          - name: LEADERBOARD_SERVICE_HOST
            value: "{{ .Values.env.LEADERBOARD_SERVICE_HOST }}"
          - name: LEADERBOARD_SERVICE_PORT
            value: "{{ .Values.env.LEADERBOARD_SERVICE_PORT }}"
          - name: JWT_SECRET_KEY
            value: "{{ .Values.env.JWT_SECRET_KEY }}"
          - name: ENV
            value: "{{ .Values.env.ENV }}"
        ports:
        - name: http
          containerPort: 8080
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
